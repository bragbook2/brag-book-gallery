!function(){"use strict";void 0===window.BRAGbookSyncAdmin&&(window.BRAGbookSyncAdmin=class{constructor(){this.config="undefined"!=typeof bragBookSync?bragBookSync:{},this.ajaxUrl=this.config.ajax_url||"/wp-admin/admin-ajax.php",this.nonces={sync:this.config.sync_nonce||"",general:this.config.nonce||"",testAuto:this.config.test_auto_nonce||"",clearLog:this.config.clear_log_nonce||"",delete:this.config.delete_nonce||""},this.messages=this.config.messages||{},this.syncInProgress=!1,this.progressTimer=null,this.syncStartTime=null,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.init()):this.init()}init(){console.log("BRAGbook Sync Admin: Initializing..."),console.log("BRAGbook Sync Admin: Config:",this.config),this.bindSyncControls(),this.bindHistoryControls(),this.bindProgressHandlers(),this.checkExistingSync(),console.log("BRAGbook Sync Admin: Initialization complete")}bindSyncControls(){console.log("BRAGbook Sync Admin: Binding sync controls...");const t=document.getElementById("sync-procedures-btn");console.log("BRAGbook Sync Admin: Sync button found:",!!t),t&&t.addEventListener("click",()=>this.startFullSync());const e=document.getElementById("stop-sync-btn");console.log("BRAGbook Sync Admin: Stop button found:",!!e),e&&e.addEventListener("click",()=>this.stopSync());const s=document.getElementById("clear-sync-log-btn");s&&s.addEventListener("click",()=>this.clearSyncLog())}bindHistoryControls(){document.querySelectorAll(".view-details").forEach(t=>{t.addEventListener("click",t=>{const e=t.target.getAttribute("data-details");this.showSyncDetails(e)})}),document.querySelectorAll(".delete-sync-record").forEach(t=>{t.addEventListener("click",t=>{const e=t.target.getAttribute("data-record-id"),s=t.target.getAttribute("data-record-date");this.deleteSyncRecord(e,s)})})}bindProgressHandlers(){}async checkExistingSync(){console.log("BRAGbook Sync Admin: Checking for existing sync...");try{const t=new FormData;t.append("action","brag_book_get_detailed_progress"),t.append("nonce",this.nonces.general);const e=await fetch(this.ajaxUrl,{method:"POST",body:t}),s=await e.json();s.success&&"idle"!==s.data.stage?(console.log("BRAGbook Sync Admin: Found existing sync in progress, resuming..."),console.log("BRAGbook Sync Admin: Sync state:",s.data),this.updateSyncsInProgress([s.data]),this.setSyncInProgress(!0),this.showProgress(),this.updateProgress(s.data.current_step,s.data.overall_percentage,s.data.procedure_progress.percentage,s.data.recent_cases||[]),this.showNotice("Resuming sync in progress...","info")):(console.log("BRAGbook Sync Admin: No active sync found"),this.updateSyncsInProgress([]))}catch(t){console.error("BRAGbook Sync Admin: Error checking existing sync:",t),this.updateSyncsInProgress([])}}async startFullSync(){if(console.log("BRAGbook Sync Admin: Starting full sync..."),this.syncInProgress)console.log("BRAGbook Sync Admin: Sync already in progress, aborting");else try{console.log("BRAGbook Sync Admin: Setting sync in progress..."),this.syncStartTime=Date.now(),this.setSyncInProgress(!0),this.showProgress();const t=document.getElementById("sync-progress-items");t&&(t.innerHTML=""),this.addProgressLogEntry("Starting full synchronization process","info"),this.addProgressLogEntry("Validating API connection and credentials","info"),this.addProgressLogEntry("Fetching sidebar data for procedures","info"),this.updateProgress("Initializing sync...",0,0,[]);const e=new FormData;e.append("action","brag_book_full_sync"),e.append("nonce",this.nonces.sync);const s=await fetch(this.ajaxUrl,{method:"POST",body:e}),o=await s.json();this.handleSyncResult(o)}catch(t){console.error("Sync error:",t),this.handleSyncError(t.message)}}updateSyncsInProgress(t){const e=document.getElementById("no-active-syncs"),s=document.getElementById("active-syncs-list");if(e&&s)if(0===t.length)e.style.display="block",s.style.display="none",s.innerHTML="";else{e.style.display="none",s.style.display="block";let o="";t.forEach((t,e)=>{const s=`sync-${e}`,n=Math.round(t.overall_percentage||0),r=t.current_step||"Processing...";o+=`\n\t\t\t\t\t\t<div class="brag-book-gallery-active-sync" data-sync-id="${s}">\n\t\t\t\t\t\t\t<div class="sync-header">\n\t\t\t\t\t\t\t\t<strong>Data Sync in Progress</strong>\n\t\t\t\t\t\t\t\t<button type="button" class="button button-secondary button-small stop-individual-sync" data-sync-id="${s}">\n\t\t\t\t\t\t\t\t\tStop Sync\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="sync-progress-summary">\n\t\t\t\t\t\t\t\t<div class="progress-text">\n\t\t\t\t\t\t\t\t\t<span class="current-step">${r}</span>\n\t\t\t\t\t\t\t\t\t<span class="progress-percentage">${n}%</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="progress-bar-container">\n\t\t\t\t\t\t\t\t\t<div class="progress-bar">\n\t\t\t\t\t\t\t\t\t\t<div class="progress-fill" style="width: ${n}%"></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`}),s.innerHTML=o,document.querySelectorAll(".stop-individual-sync").forEach(t=>{t.addEventListener("click",()=>this.stopSync())})}else console.log("BRAGbook Sync Admin: Syncs in progress elements not found, skipping update")}async stopSync(){try{const t=new FormData;t.append("action","brag_book_stop_sync"),t.append("nonce",this.nonces.general);const e=await fetch(this.ajaxUrl,{method:"POST",body:t}),s=await e.json();s.success?(this.showNotice(s.data.message,"info"),this.setSyncInProgress(!1)):this.showNotice(s.data.message,"error")}catch(t){console.error("Stop sync error:",t),this.showNotice("Failed to stop sync: "+t.message,"error")}}async clearSyncLog(){if(confirm(this.messages.confirm_clear_log||"Are you sure you want to clear the sync log?"))try{const t=new FormData;t.append("action","brag_book_clear_sync_log"),t.append("nonce",this.nonces.clearLog);const e=await fetch(this.ajaxUrl,{method:"POST",body:t}),s=await e.json();s.success?(this.showNotice(s.data.message,"success"),setTimeout(()=>window.location.reload(),1500)):this.showNotice(s.data.message,"error")}catch(t){console.error("Clear log error:",t),this.showNotice("Failed to clear sync log: "+t.message,"error")}}async deleteSyncRecord(t,e){const s=this.messages.confirm_delete_record||"Are you sure you want to delete this sync record?";if(confirm(`${s}\n\nRecord: ${e}`))try{const e=new FormData;e.append("action","brag_book_delete_sync_record"),e.append("nonce",this.nonces.delete),e.append("record_id",t);const s=await fetch(this.ajaxUrl,{method:"POST",body:e}),o=await s.json();o.success?(this.showNotice(o.data.message,"success"),setTimeout(()=>window.location.reload(),1500)):this.showNotice(o.data.message,"error")}catch(t){console.error("Delete record error:",t),this.showNotice("Failed to delete sync record: "+t.message,"error")}}showSyncDetails(t){try{const e=JSON.parse(t);if(e.activity_log&&"object"==typeof e.activity_log)this.showActivityLogReport(e);else{const t=JSON.stringify(e,null,2);alert("Sync Details:\n\n"+t)}}catch(e){alert("Sync Details:\n\n"+t)}}showActivityLogReport(t){const e=document.createElement("div");e.style.cssText="\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbackground: rgba(0,0,0,0.8);\n\t\t\t\tz-index: 10000;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t";const s=document.createElement("div");s.style.cssText="\n\t\t\t\tbackground: #fff;\n\t\t\t\tpadding: 20px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tmax-width: 80%;\n\t\t\t\tmax-height: 80%;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tbox-shadow: 0 4px 20px rgba(0,0,0,0.3);\n\t\t\t";let o='<h2 style="margin-top: 0;">Sync Activity Report</h2>';if(o+="<h3>Summary</h3>",o+='<div style="background: #f9f9f9; padding: 10px; border-radius: 3px; margin-bottom: 20px;">',o+=`<p><strong>Procedures Created:</strong> ${t.created||0}</p>`,o+=`<p><strong>Procedures Updated:</strong> ${t.updated||0}</p>`,o+=`<p><strong>Cases Created:</strong> ${t.cases_created||0}</p>`,o+=`<p><strong>Cases Updated:</strong> ${t.cases_updated||0}</p>`,o+=`<p><strong>Total Cases Processed:</strong> ${t.total_processed||0}</p>`,t.duration&&(o+=`<p><strong>Duration:</strong> ${t.duration}</p>`),o+="</div>",t.activity_log){o+="<h3>Activity Log</h3>",o+='<div style="background: #f1f1f1; padding: 10px; border-radius: 3px; font-family: monospace; font-size: 12px; max-height: 300px; overflow-y: auto;">';const e=t.activity_log;e.current_step&&(o+=`<div style="margin-bottom: 10px;"><strong>Final Step:</strong> ${e.current_step}</div>`),e.overall_percentage&&(o+=`<div style="margin-bottom: 10px;"><strong>Progress:</strong> ${e.overall_percentage}% complete</div>`),e.updated_at&&(o+=`<div style="margin-bottom: 10px;"><strong>Completed:</strong> ${e.updated_at}</div>`),o+="</div>"}o+='<div style="text-align: right; margin-top: 20px;">',o+='<button id="close-sync-report" style="background: #0073aa; color: white; border: none; padding: 8px 16px; border-radius: 3px; cursor: pointer;">Close</button>',o+="</div>",s.innerHTML=o,e.appendChild(s),document.body.appendChild(e),document.getElementById("close-sync-report").addEventListener("click",()=>{document.body.removeChild(e)}),e.addEventListener("click",t=>{t.target===e&&document.body.removeChild(e)})}setSyncInProgress(t){console.log("BRAGbook Sync Admin: Setting sync in progress:",t),this.syncInProgress=t;const e=document.getElementById("sync-procedures-btn"),s=document.getElementById("stop-sync-btn");console.log("BRAGbook Sync Admin: Elements found - sync:",!!e,"stop:",!!s),e&&(e.disabled=t,e.textContent=t?"Sync in Progress...":"Start Full Sync",console.log("BRAGbook Sync Admin: Updated sync button - disabled:",t,"text:",e.textContent)),s&&(s.style.display=t?"inline-block":"none",console.log("BRAGbook Sync Admin: Updated stop button display:",s.style.display)),t?this.startProgressPolling():this.stopProgressPolling()}showProgress(){console.log("BRAGbook Sync Admin: showProgress() called");const t=document.getElementById("sync-progress");console.log("BRAGbook Sync Admin: Progress section found:",!!t),t&&(t.style.display="block");const e=document.getElementById("sync-progress-details");console.log("BRAGbook Sync Admin: Progress details found:",!!e),e&&(e.style.display="block",console.log("BRAGbook Sync Admin: Progress details shown"))}hideProgress(){const t=document.getElementById("sync-progress");t&&(t.style.display="none");const e=document.getElementById("sync-progress-details");e&&(e.style.display="none")}updateProgress(t,e,s,o=[]){const n=document.getElementById("sync-overall-fill"),r=document.getElementById("sync-overall-percentage"),c=document.getElementById("sync-current-operation"),a=document.getElementById("sync-current-fill"),i=document.getElementById("sync-current-percentage");if(n&&(n.style.width=e+"%"),r){let t=Math.round(e)+"%";if(this.syncStartTime&&e>0){const e=Math.floor((Date.now()-this.syncStartTime)/1e3),s=Math.floor(e/60),o=e%60;t+=` (${s>0?`${s}m ${o}s`:`${o}s`})`}r.textContent=t}c&&(c.textContent=t),a&&(a.style.width=s+"%"),i&&(i.textContent=Math.round(s)+"%"),this.updateProgressLog(o)}setProgressBarsCompleted(){const t=document.getElementById("sync-overall-fill"),e=document.getElementById("sync-current-fill");t&&(t.style.backgroundColor="#00a32a",t.style.transition="background-color 0.3s ease"),e&&(e.style.backgroundColor="#00a32a",e.style.transition="background-color 0.3s ease"),document.querySelectorAll(".progress-fill").forEach(t=>{t.style.backgroundColor="#00a32a",t.style.transition="background-color 0.3s ease"})}formatStageLabel(t){switch(t){case"procedures":return"Procedure Synchronization";case"cases":return"Case Creation";case"completed":return"Sync Completed";case"idle":return"Idle";default:return t.charAt(0).toUpperCase()+t.slice(1)}}addProgressLogEntry(t,e="success"){const s=document.getElementById("sync-progress-items");if(!s)return void console.error("BRAGbook Sync Admin: Progress items element not found!");const o=document.createElement("li");o.className=`sync-log-item sync-log-item--${e}`;const n=(new Date).toLocaleTimeString();switch(o.textContent=`[${n}] ${t}`,e){case"success":o.style.cssText="padding: 5px 10px; margin: 1px 0; background: #fff; border-left: 3px solid #00a32a; font-size: 11px; color: #333;";break;case"info":o.style.cssText="padding: 5px 10px; margin: 1px 0; background: #f0f0f1; border-left: 3px solid #72aee6; font-size: 11px; color: #555;";break;case"warning":o.style.cssText="padding: 5px 10px; margin: 1px 0; background: #fff8e1; border-left: 3px solid #ff9800; font-size: 11px; color: #333;";break;case"error":o.style.cssText="padding: 5px 10px; margin: 1px 0; background: #ffebee; border-left: 3px solid #f44336; font-size: 11px; color: #333;"}s.appendChild(o),s.scrollTop=s.scrollHeight,console.log("BRAGbook Sync Admin: Added progress log entry:",t)}updateProgressLog(t){console.log("BRAGbook Sync Admin: updateProgressLog() called with:",t),t&&t.length>0&&(console.log("BRAGbook Sync Admin: Adding",t.length,"recent cases to log"),t.forEach(t=>{this.addProgressLogEntry(`✓ ${t}`,"success")}))}startProgressPolling(){this.progressTimer&&clearInterval(this.progressTimer);let t="",e="",s="",o=0;this.progressTimer=setInterval(async()=>{try{const n=new FormData;n.append("action","brag_book_get_detailed_progress"),n.append("nonce",this.nonces.general);const r=await fetch(this.ajaxUrl,{method:"POST",body:n}),c=await r.json();if(c.success&&"idle"!==c.data.stage){const n=c.data;if(console.log("BRAGbook Sync Admin: Progress polling received data:",n),"completed"===n.stage)return this.addProgressLogEntry("🎉 Synchronization completed successfully!","success"),this.updateProgress(n.current_step,n.overall_percentage,n.procedure_progress.percentage,n.recent_cases||[]),this.setProgressBarsCompleted(),this.setSyncInProgress(!1),void this.updateSyncsInProgress([]);if(t!==n.stage){const e=this.formatStageLabel(n.stage);this.addProgressLogEntry(`[STAGE] ${e}`,"info"),t=n.stage}e!==n.current_step&&(this.addProgressLogEntry(`⏳ ${n.current_step}`,"info"),e=n.current_step),n.current_procedure&&s!==n.current_procedure&&(this.addProgressLogEntry(`📋 Processing procedure: ${n.current_procedure}`,"info"),s=n.current_procedure),n.taxonomy_mapping_issues&&n.taxonomy_mapping_issues.length>0&&n.taxonomy_mapping_issues.forEach(t=>{this.addProgressLogEntry(`Taxonomy: ${t}`,"warning")}),n.overall_percentage-o>=5&&(this.addProgressLogEntry(`Overall progress: ${Math.round(n.overall_percentage)}%`,"info"),o=n.overall_percentage),n.errors&&n.errors.length>0&&n.errors.forEach(t=>{this.addProgressLogEntry(`Error: ${t}`,"error")}),n.warnings&&n.warnings.length>0&&n.warnings.forEach(t=>{this.addProgressLogEntry(`Warning: ${t}`,"warning")}),this.updateProgress(n.current_step,n.overall_percentage,n.procedure_progress.percentage,n.recent_cases||[]),this.updateSyncsInProgress([n])}else c.success&&"idle"===c.data.stage&&(this.addProgressLogEntry("Synchronization completed successfully","success"),this.updateProgress("Sync Completed",100,100,[]),this.setProgressBarsCompleted(),this.setSyncInProgress(!1),this.updateSyncsInProgress([]))}catch(t){console.error("Progress polling error:",t),this.addProgressLogEntry(`Polling error: ${t.message}`,"error")}},1500)}stopProgressPolling(){this.progressTimer&&(clearInterval(this.progressTimer),this.progressTimer=null)}handleSyncResult(t){if(t.success){if(this.addProgressLogEntry("🎉 Sync completed successfully!","success"),this.updateProgress("Sync Completed",100,100,[]),this.setProgressBarsCompleted(),t.data){const e=t.data;this.addProgressLogEntry("Final Statistics:","info"),this.addProgressLogEntry(`   • Procedures Created: ${e.created||0}`,"success"),this.addProgressLogEntry(`   • Procedures Updated: ${e.updated||0}`,"success"),this.addProgressLogEntry(`   • Cases Created: ${e.cases_created||0}`,"success"),this.addProgressLogEntry(`   • Cases Updated: ${e.cases_updated||0}`,"success"),e.duration&&this.addProgressLogEntry(`   • Total Duration: ${e.duration}`,"info")}this.showNotice(this.messages.sync_complete||"Sync completed successfully!","success"),this.showResults(t.data),setTimeout(()=>window.location.reload(),5e3)}else this.handleSyncError(t.data?.message||"Unknown error occurred");this.setSyncInProgress(!1)}handleSyncError(t){this.setSyncInProgress(!1),this.addProgressLogEntry(`💥 Sync failed: ${t}`,"error"),this.showNotice(this.messages.sync_error+" "+t,"error")}showResults(t){const e=document.getElementById("sync-results"),s=document.getElementById("sync-results-content");if(e&&s){let o='<div class="brag-book-gallery-results">';o+=`<p><strong>Procedures Created:</strong> ${t.created||0}</p>`,o+=`<p><strong>Procedures Updated:</strong> ${t.updated||0}</p>`,o+=`<p><strong>Cases Created:</strong> ${t.cases_created||0}</p>`,o+=`<p><strong>Cases Updated:</strong> ${t.cases_updated||0}</p>`,t.duration&&(o+=`<p><strong>Duration:</strong> ${t.duration}</p>`),o+="</div>",s.innerHTML=o,e.style.display="block"}}showNotice(t,e="info"){const s=document.querySelector(".brag-book-gallery-notices");if(!s)return void console.log(e.toUpperCase()+": "+t);const o=document.createElement("div");o.className=`notice notice-${e} is-dismissible`,o.innerHTML=`<p>${t}</p>`,s.appendChild(o),setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},5e3)}},console.log("BRAGbook Sync Admin: Script loaded, creating instance..."),new window.BRAGbookSyncAdmin)}();